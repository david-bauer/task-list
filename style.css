* {
    box-sizing: border-box;
}

body {
    /* colors */
    --pink: #ffafcc;
    --light-pink: #ffe2ed;
    --light-accent: #ffd42b;
    --dark-accent: #33261D;
    --black: #1c1c1c;
    --white: #fcfcfc;

    /* box shadow settings */
    --shadow-color: 339deg 48% 52%;
    --shadow-elevation-medium: 0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.36),
    0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.36),
    2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.36),
    5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.36);
    --shadow-elevation-high: 0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.34),
    1.5px 2.9px 3.7px -0.4px hsl(var(--shadow-color) / 0.34),
    2.7px 5.4px 6.8px -0.7px hsl(var(--shadow-color) / 0.34),
    4.5px 8.9px 11.2px -1.1px hsl(var(--shadow-color) / 0.34),
    7.1px 14.3px 18px -1.4px hsl(var(--shadow-color) / 0.34),
    11.2px 22.3px 28.1px -1.8px hsl(var(--shadow-color) / 0.34),
    17px 33.9px 42.7px -2.1px hsl(var(--shadow-color) / 0.34),
    25px 50px 62.9px -2.5px hsl(var(--shadow-color) / 0.34);
    --shadow-elevation-low: 0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.34),
    0.4px 0.8px 1px -1.2px hsl(var(--shadow-color) / 0.34),
    1px 2px 2.5px -2.5px hsl(var(--shadow-color) / 0.34);

    --animation-timing: 100ms;

    /* body fills viewport */
    margin: 0;
    width: 100%;
    height: 100vh;

    display: flex;
    flex-direction: column;
    align-items: center;

    background-color: var(--pink);
    color: var(--dark-accent);
}

.content {
    padding: 2em;
    margin-top: 5vh;
    max-width: calc(100vw - 5vh - 2em);

    background-color: var(--white);
    border-radius: 1em;
    box-shadow: var(--shadow-elevation-medium);
}

h1 {
    text-align: center;
    text-transform: lowercase;
}


/* new task form styles */
.add-task-form {
    display: flex;
    flex-direction: row;
}

.add-task-input {
    flex-grow: 1;
    padding: 1em;

    color: black;
    font-size: 1em;
    text-decoration: wavy;

    border: 4px solid transparent;
    border-right: 0;
    border-radius: 1em 0 0 1em;
    background-color: var(--light-pink);
    box-shadow: var(--shadow-elevation-low);
}

.add-task-input:focus {
    outline: none;
    border: 4px solid var(--light-accent);
    border-right: 0;
}

.add-task-input:focus ~ .add-task-button {
    border: 4px solid var(--light-accent);
    border-left: 0;
}

button {
    display: block;
    flex-grow: 0;

    padding-left: 0.8ch;
    padding-right: 0.8ch;
    font-size: 1em;
    color: black;
    border: 4px solid transparent;
    background-color: transparent;
    cursor: pointer;
}

.add-task-button {
    padding-left: calc(0.8ch + 4px);
    border-radius: 0 1em 1em 0;
    border-left: 0;
    background-color: var(--pink);
    box-shadow: var(--shadow-elevation-low);
}

.add-task-button:hover {
    border: 4px solid var(--light-accent);
    border-left: 0;
    background-color: var(--light-accent);
}

.add-task-button:focus {
    outline: 1px solid transparent;
    background-color: var(--light-accent);
}

/* list of tasks styles */
.task-list {
    display: flex;
    flex-direction: column;
    align-content: stretch;

    /*width: 100%;*/
    padding: 0;
    margin: 2em 0 0 0;
    border-radius: 1em;
    overflow: hidden;

    list-style: none;
}

.task {
    display: flex;
    flex-direction: row;
    align-items: stretch;
    gap: 0;

    cursor: pointer;
    user-select: none;

    background-color: var(--light-pink);

    transform-origin: top center;
    transition: transform, background-color, color;
    transition-duration: var(--animation-timing);
}

.task:nth-child(2n+1) {
    color: var(--white);
    background-color: var(--pink);
}

.task[aria-checked='true'] {
    text-decoration: line-through;
}

.task-box {
    flex-grow: 0;
}

.task-name {
    display: block;
    margin: .75em 1em;
    line-height: 1.5em;
    flex-grow: 1;

    word-break: normal;
    pointer-events: none;
}

.task button {
    opacity: 0;
    background-color: transparent;
    transition: background-color, color, opacity;
    transition-duration: var(--animation-timing);
}

.task:hover button {
    opacity: 1;
}

.task button:hover {
    background-color: var(--pink);
}

.task:nth-of-type(2n+1) button:hover {
    background-color: var(--light-pink);
}

:is(.task, .task:nth-of-type(2n+1)) :is(button[aria-pressed="true"], button:focus) {
    color: var(--light-pink);
    background-color: var(--dark-accent);
    outline: 1px solid transparent;
    opacity: 1;
}

.task button[aria-pressed="true"] {
    cursor: grabbing;
}

.task .drag-btn {
    cursor: grab;
}

/* hide the other buttons when one is pressed */
.task button[aria-pressed="true"] ~ button {
    opacity: 0;
}

i {
    pointer-events: none;
}

.moving {
    z-index: 1000;
}

.error {
    background-color: crimson !important;
    color: var(--white) !important;
}
